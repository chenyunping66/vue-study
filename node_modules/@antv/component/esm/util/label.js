import { each } from '@antv/util';
import { ellipsisString, strLen } from './text';
var ELLIPSIS_CODE = '\u2026';
var ELLIPSIS_CODE_LENGTH = 2; // 省略号的长度
/** 获取最长的 label */
export function getMaxLabelWidth(labels) {
    var max = 0;
    each(labels, function (label) {
        var bbox = label.getBBox();
        var width = bbox.width;
        if (max < width) {
            max = width;
        }
    });
    return max;
}
/** 获取label长度 */
export function getLabelLength(isVertical, label) {
    var bbox = label.getCanvasBBox();
    return isVertical ? bbox.width : bbox.height;
}
/* label长度是否超过约束值 */
export function testLabel(label, limitLength) {
    return label.getBBox().width < limitLength;
}
/** 处理 text shape 的自动省略 */
export function ellipsisLabel(isVertical, label, limitLength, position) {
    if (position === void 0) { position = 'tail'; }
    var text = label.attr('text');
    var labelLength = getLabelLength(isVertical, label);
    var codeLength = strLen(text);
    var ellipsised = false;
    if (limitLength < labelLength) {
        var reseveLength = Math.floor((limitLength / labelLength) * codeLength) - ELLIPSIS_CODE_LENGTH; // 计算出来的应该保存的长度
        var newText = void 0;
        if (reseveLength >= 0) {
            newText = ellipsisString(text, reseveLength, position);
        }
        else {
            newText = ELLIPSIS_CODE;
        }
        if (newText) {
            label.attr('text', newText);
            ellipsised = true;
        }
    }
    if (ellipsised) {
        label.set('tip', text);
    }
    else {
        label.set('tip', null);
    }
    return ellipsised;
}
//# sourceMappingURL=label.js.map