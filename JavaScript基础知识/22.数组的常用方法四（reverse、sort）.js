// 5.数组的排序或者排列
// ======================================reverse: 把数组倒过来排列
/*  reverse:  把数组倒过来排列
*   @params
*   @return
*     排序后的新数组
*  原来数组改变
*
*/
let ary = [12,34,55,6,7,33];
ary.reverse();
console.log(ary);  // [33, 7, 6, 55, 34, 12]

// ======================================sort: 实现数组的排序
/*  sort:  实现数组的排序
*   @params
*    可以没有，也可以是个函数
*   @return
*     排序后的新数组
*  原来数组改变
*
*/

let ary = [1,4,6,7,3,9];
ary.sort();
console.log(ary);  // [1, 3, 4, 6, 7, 9]

// sort方法中如果不传递参数，是无法处理10以上数字排序的（它默认按照每一项第一个字符排序，不是我们想要的效果）
let ary = [12,34,55,6,7,33];
ary.sort();
console.log(ary);  // [12, 33, 34, 55, 6, 7]

// 解决办法
// 想要实现多位数的正常排序，需要给sort传递一个函数，函数中返回a-b实现升序，返回b-a,实现降序
// （为啥？原理需要先了解冒泡排序的机制，后续继续学习（商场排序））
let ary = [12,34,55,6,7,33];
// ary.sort(function(a,b){
// });
ary.sort((a,b) => {
  // a和b是相邻的两项
  //  console.log(a,b)
  return a-b
  // return b-a  //由大到小
});
console.log(ary);  //  [6, 7, 12, 33, 34, 55]

// ary.sort((a,b) => a-b); //箭头函数的写法